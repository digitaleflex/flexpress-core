services:
  # Service Nginx
  nginx:
    image: nginx:alpine
    container_name: flexpress-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-9000}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - wordpress_data:/var/www/html
      - ./config/nginx:/etc/nginx/conf.d
      - ./config/nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      wordpress:
        condition: service_healthy
    networks:
      - flexpress-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 3s
      retries: 3
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
      - NGINX_SSL_PORT=443

  # Service WordPress
  wordpress:
    build:
      context: .
      args:
        - MYSQL_ROOT_PASSWORD=rootpassword123
        - MYSQL_PASSWORD=wordpresspassword
        - REDIS_PASSWORD=redispassword
        - WORDPRESS_DB_PASSWORD=wordpresspassword
    container_name: flexpress-wordpress
    restart: unless-stopped
    environment:
      - WORDPRESS_DB_HOST=mysql
      - WORDPRESS_DB_USER=wordpress
      - WORDPRESS_DB_PASSWORD=wordpresspassword
      - WORDPRESS_DB_NAME=wordpress
      - WORDPRESS_DEBUG=false
      - WORDPRESS_LANG=fr_FR
      - WP_REDIS_HOST=redis
      - WP_REDIS_PORT=6379
      - WP_REDIS_DATABASE=0
      - WP_REDIS_PASSWORD=redispassword
    volumes:
      - wordpress_data:/var/www/html
      - ./config/php:/usr/local/etc/php/conf.d
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - flexpress-network
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Service MySQL
  mysql:
    image: mysql:8.0
    container_name: flexpress-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword123  # Mot de passe root pour MySQL
      - MYSQL_DATABASE=wordpress           # Nom de la base de donn√©es
      - MYSQL_USER=wordpress               # Utilisateur WordPress
      - MYSQL_PASSWORD=wordpresspassword   # Mot de passe utilisateur WordPress
      - MYSQL_HOST=localhost
    volumes:
      - mysql_data:/var/lib/mysql
      - ./config/mysql:/etc/mysql/conf.d
      - mysql_logs:/var/log/mysql
      - ./scripts/init-mysql.sh:/docker-entrypoint-initdb.d/init-mysql.sh
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - flexpress-network

  # Service Redis
  redis:
    image: redis:alpine
    container_name: flexpress-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - flexpress-network

volumes:
  wordpress_data:
    name: flexpress-wordpress-data
  mysql_data:
    name: flexpress-mysql-data
  redis_data:
    name: flexpress-redis-data
  mysql_logs:
    name: flexpress-mysql-logs
  nginx_logs:
    name: flexpress-nginx-logs

networks:
  flexpress-network:
    name: flexpress-network
    driver: bridge

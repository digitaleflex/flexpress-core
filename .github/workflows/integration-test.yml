name: Integration Tests

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  test-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate .env file for testing
        run: |
          # Use a block to redirect all echos to the .env file at once, addressing SC2129
          {
            echo "NGINX_PORT=9000"
            echo "MYSQL_DATABASE=wordpress"
            echo "MYSQL_USER=wordpress"
            echo "WORDPRESS_DEBUG=false"
            # Generate random passwords for the test run
            MYSQL_PASSWORD=$(openssl rand -hex 16)
            echo "WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD"
            echo "MYSQL_PASSWORD=$MYSQL_PASSWORD"
            echo "MYSQL_ROOT_PASSWORD=$(openssl rand -hex 16)"
          } > .env

          echo "--- Generated .env file for test ---"
          cat .env
          echo "------------------------------------"

      - name: Build and run the environment
        run: docker compose up -d --build

      - name: Wait for WordPress and run integration test
        run: |
          echo "Waiting for WordPress setup page..."
          timeout=300 # 5 minutes timeout
          interval=10 # 10 seconds interval
          elapsed=0
          # Loop until the setup form is present in the page content
          until curl -sf http://localhost:9000 | grep -q '<form id="setup" method="post">'; do
            if [ $elapsed -ge $timeout ]; then
              echo "Timeout reached. WordPress setup page not found."
              echo "--- DOCKER LOGS ---"
              docker compose logs
              exit 1
            fi
            echo "WordPress not ready, waiting $interval seconds..."
            sleep $interval
            elapsed=$((elapsed + interval))
          done
          echo "âœ… WordPress setup page is available. Integration test passed!"

      - name: Show logs on failure
        if: failure()
        run: docker compose logs

      - name: Tear down the environment
        if: always()
        run: docker compose down
